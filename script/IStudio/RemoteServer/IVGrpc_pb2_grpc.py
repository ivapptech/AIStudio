# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import IVGrpc_pb2 as IVGrpc__pb2


class FTPRPCStub(object):
  """The RPC service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Login = channel.unary_unary(
        '/PYIVGrpc.FTPRPC/Login',
        request_serializer=IVGrpc__pb2.PUser.SerializeToString,
        response_deserializer=IVGrpc__pb2.PResponse.FromString,
        )
    self.Logout = channel.unary_unary(
        '/PYIVGrpc.FTPRPC/Logout',
        request_serializer=IVGrpc__pb2.PUser.SerializeToString,
        response_deserializer=IVGrpc__pb2.PResponse.FromString,
        )
    self.FTPCmd = channel.unary_unary(
        '/PYIVGrpc.FTPRPC/FTPCmd',
        request_serializer=IVGrpc__pb2.PCommand.SerializeToString,
        response_deserializer=IVGrpc__pb2.PResponse.FromString,
        )
    self.FTPList = channel.unary_unary(
        '/PYIVGrpc.FTPRPC/FTPList',
        request_serializer=IVGrpc__pb2.PCommand.SerializeToString,
        response_deserializer=IVGrpc__pb2.PFileList.FromString,
        )
    self.FTPDownload = channel.unary_stream(
        '/PYIVGrpc.FTPRPC/FTPDownload',
        request_serializer=IVGrpc__pb2.PString.SerializeToString,
        response_deserializer=IVGrpc__pb2.PArray.FromString,
        )
    self.FTPUpload = channel.stream_unary(
        '/PYIVGrpc.FTPRPC/FTPUpload',
        request_serializer=IVGrpc__pb2.PArray.SerializeToString,
        response_deserializer=IVGrpc__pb2.PResponse.FromString,
        )


class FTPRPCServicer(object):
  """The RPC service definition.
  """

  def Login(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Logout(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FTPCmd(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FTPList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FTPDownload(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FTPUpload(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FTPRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=IVGrpc__pb2.PUser.FromString,
          response_serializer=IVGrpc__pb2.PResponse.SerializeToString,
      ),
      'Logout': grpc.unary_unary_rpc_method_handler(
          servicer.Logout,
          request_deserializer=IVGrpc__pb2.PUser.FromString,
          response_serializer=IVGrpc__pb2.PResponse.SerializeToString,
      ),
      'FTPCmd': grpc.unary_unary_rpc_method_handler(
          servicer.FTPCmd,
          request_deserializer=IVGrpc__pb2.PCommand.FromString,
          response_serializer=IVGrpc__pb2.PResponse.SerializeToString,
      ),
      'FTPList': grpc.unary_unary_rpc_method_handler(
          servicer.FTPList,
          request_deserializer=IVGrpc__pb2.PCommand.FromString,
          response_serializer=IVGrpc__pb2.PFileList.SerializeToString,
      ),
      'FTPDownload': grpc.unary_stream_rpc_method_handler(
          servicer.FTPDownload,
          request_deserializer=IVGrpc__pb2.PString.FromString,
          response_serializer=IVGrpc__pb2.PArray.SerializeToString,
      ),
      'FTPUpload': grpc.stream_unary_rpc_method_handler(
          servicer.FTPUpload,
          request_deserializer=IVGrpc__pb2.PArray.FromString,
          response_serializer=IVGrpc__pb2.PResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PYIVGrpc.FTPRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class DataRPCStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RPCClientSendMsg = channel.unary_unary(
        '/PYIVGrpc.DataRPC/RPCClientSendMsg',
        request_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
        response_deserializer=IVGrpc__pb2.RPCMessage.FromString,
        )
    self.RPCClientStreamMsg = channel.stream_unary(
        '/PYIVGrpc.DataRPC/RPCClientStreamMsg',
        request_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
        response_deserializer=IVGrpc__pb2.RPCMessage.FromString,
        )
    self.RPCServerSendMsg = channel.stream_stream(
        '/PYIVGrpc.DataRPC/RPCServerSendMsg',
        request_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
        response_deserializer=IVGrpc__pb2.RPCMessage.FromString,
        )
    self.RPCServerReceiveMsg = channel.stream_unary(
        '/PYIVGrpc.DataRPC/RPCServerReceiveMsg',
        request_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
        response_deserializer=IVGrpc__pb2.RPCMessage.FromString,
        )


class DataRPCServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RPCClientSendMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RPCClientStreamMsg(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RPCServerSendMsg(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RPCServerReceiveMsg(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DataRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RPCClientSendMsg': grpc.unary_unary_rpc_method_handler(
          servicer.RPCClientSendMsg,
          request_deserializer=IVGrpc__pb2.RPCMessage.FromString,
          response_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
      ),
      'RPCClientStreamMsg': grpc.stream_unary_rpc_method_handler(
          servicer.RPCClientStreamMsg,
          request_deserializer=IVGrpc__pb2.RPCMessage.FromString,
          response_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
      ),
      'RPCServerSendMsg': grpc.stream_stream_rpc_method_handler(
          servicer.RPCServerSendMsg,
          request_deserializer=IVGrpc__pb2.RPCMessage.FromString,
          response_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
      ),
      'RPCServerReceiveMsg': grpc.stream_unary_rpc_method_handler(
          servicer.RPCServerReceiveMsg,
          request_deserializer=IVGrpc__pb2.RPCMessage.FromString,
          response_serializer=IVGrpc__pb2.RPCMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PYIVGrpc.DataRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
