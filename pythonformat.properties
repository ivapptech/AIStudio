

if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=$(scale 576)
position.height=$(scale 740)
split.vertical=1
tabbar.visible=1

line.margin.width=4
margin.width=$(scale 16)
fold.margin.width=$(scale 14)
buffered.draw=0
if PLAT_WIN
	technology=1
if PLAT_MAC
	font.quality=3

caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
view.indentation.examine=3
highlight.indentation.guides=1
edge.column=200
edge.mode=0
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
if PLAT_WINNT
	selection.alpha=32
	selection.back=#000000
if PLAT_GTK
	selection.alpha=30
	selection.back=#000000
if PLAT_MAC
	selection.alpha=32
	selection.back=#000000
bookmark.fore=#BE0000

ext.lua.startup.script=$(SciteUserHome)/SciTEStartup.lua
ext.lua.auto.reload=1

are.you.sure=1
default.file.ext=.cxx
buffers=100
if PLAT_GTK
	background.save.size=10000000

tabsize=8
indent.size=8
use.tabs=1
indent.automatic=1
indent.opening=0
indent.closing=0



fold=1
fold.compact=1
fold.flags=16
fold.symbols=1
fold.comment=1
fold.preprocessor=1

find.command=
find.files=*.c *.cxx *.h
find.use.strip=1
replace.use.strip=1

eol.auto=1
clear.before.execute=0
caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0

statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\SciTEDoc.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.scite.help=xdg-open "file://$(SciteDefaultHome)/SciTEDoc.html"

code.page=0
if PLAT_GTK
	output.code.page=65001
if PLAT_MAC
	output.code.page=65001

export.html.wysiwyg=1
export.html.styleused=1
export.pdf.magnification=0
export.pdf.font=Helvetica
export.pdf.pagesize=595,842
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=ŠšŒœŸÿÀàÁáÂâÃãÄäÅåÆæÇçÈèÉéÊêËëÌìÍíÎîÏïÐðÑñÒòÓóÔôÕõÖØøÙùÚúÛûÜüÝýÞþßö


source.files=$(star *source.patterns.)
source.all.filter=All Source|$(source.files)|

if PLAT_WIN
	all.files=All Files (*.*)|*.*|
	top.filters=$(source.all.filter)$(all.files)
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
	top.filters=$(source.all.filter)$(all.files)
if PLAT_MAC
	all.files=All Files (*.*)|*.*|
	top.filters=$(all.files)$(source.all.filter)

list.filters=$(star *filter.)

open.filter=$(top.filters)$(list.filters)


if PLAT_WIN
	font.base=font:Verdana,size:9.4
	font.small=font:Verdana,size:8
	font.comment=font:Georgia,size:10.1
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Times New Roman,size:11
	font.text.comment=font:Verdana,size:9
	font.embedded.base=font:Verdana,size:9
	font.embedded.comment=font:Comic Sans MS,size:8
	font.monospace=font:Consolas,size:8.9
	font.vbs=font:Candara,size:10
if PLAT_GTK
	font.base=font:DejaVu Sans,size:9
	font.small=font:DejaVu Sans,size:8
	font.comment=font:DejaVu Serif,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:DejaVu Serif,size:10
	font.text.comment=font:Serif,size:9
	font.embedded.base=font:Serif,size:9
	font.embedded.comment=font:Serif,size:9
	font.monospace=font:DejaVu Sans Mono,size:9
	font.vbs=font:DejaVu Sans Mono,size:9
if PLAT_MAC
	font.base=font:Verdana,size:12
	font.small=font:Verdana,size:10
	font.comment=font:Georgia,size:13
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Times New Roman,size:13
	font.text.comment=font:Verdana,size:11
	font.embedded.base=font:Verdana,size:11
	font.embedded.comment=font:Comic Sans MS,size:10
	font.monospace=font:Courier New,size:12
	font.vbs=font:Lucida Sans Unicode,size:12
font.js=$(font.comment)

colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.code.comment.nested=fore:#A0C0A0
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

style.*.32=$(font.base)
style.*.33=back:#E7E7E7,$(font.base)
style.*.34=fore:#0000FF,bold
style.*.35=fore:#FF0000,bold
style.*.36=
style.*.37=fore:#C0C0C0,back:#FFFFFF

print.magnification=-1
print.margins=1500,1000,1000,1500
print.header.format=$(FileNameExt) -- Printed on $(CurrentDate), $(CurrentTime) -- Page $(CurrentPage)
print.footer.format=$(FilePath) -- File date: $(FileDate) -- File time: $(FileTime)
print.header.style=font:Arial,size:12,bold
print.footer.style=font:Arial Narrow,size:10,italics



keyText=Shift+F11
keyMake=Ctrl+Shift+F11
keyHTML=F12
keyXML=Shift+F12
keyIndent=Ctrl+Shift+F12
if PLAT_MAC
	os.x.home.end.keys=1
	keyText=Shift+F13
	keyMake=Ctrl+Shift+F13
	keyHTML=Ctrl+Shift+F14
	keyXML=Shift+F14
	keyIndent=

menu.language=$(star *language.)

user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|



imports.exclude=abaqus asl asn1 au3 ave avs baan blitzbasic bullant \
cmake cobol coffeescript csound ecl eiffel erlang escript flagship forth freebasic \
gap haskell hex inno json \
kix latex lot lout metapost mmixal modula3 nimrod nncrontab nsis \
opal oscript pov powerpro powershell ps purebasic r rebol rust \
scriptol smalltalk sorcins spice specman \
tacl tal txt2tags verilog vhdl visualprolog

import *


module python

file.patterns.py=*.py;*.pyw;*.pyx;*.pxd;*.pxi
file.patterns.scons=SConstruct;SConscript

*source.patterns.python=$(file.patterns.py);

shbang.python=py

filter.python=Python (py pyw)|$(file.patterns.py)|

*filter.python=$(filter.python)

lexer.$(file.patterns.py)=python
lexer.$(file.patterns.scons)=python

*language.python=Pytho&n|py||

keywordclass.python2=and as assert break class continue def del elif \
else except exec finally for from global if import in is lambda not \
or pass print raise return try while with yield

keywordclass.python3=False None True and as assert break class continue \
def del elif else except finally for from global if import in is lambda \
nonlocal not or pass raise return try while with yield

keywordclass.python=$(keywordclass.python2)

keywordclass.cython=cdef cimport cpdef

keywords.$(file.patterns.py)=$(keywordclass.python) $(keywordclass.cython)
keywords.$(file.patterns.scons)=$(keywordclass.python)



substyles.python.11=2

substylewords.11.1.$(file.patterns.py)=\
__main__ _dummy_thread _thread abc aifc argparse \
array ast asynchat asyncio asyncore atexit audioop \
base64 bdb binascii binhex bisect builtins bz2 \
calendar cgi cgitb chunk cmath cmd code codecs \
codeop collections colorsys compileall concurrent \
configparser contextlib copy copyreg crypt csv \
ctypes curses datetime dbm decimal difflib dis \
distutils dummy_threading email ensurepip enum \
errno faulthandler fcntl filecmp fileinput fnmatch \
formatter fpectl fractions ftplib functools gc getopt \
getpass gettext glob grp gzip hashlib heapq hmac \
html http http imaplib imghdr importlib inspect io \
ipaddress itertools json keyword linecache locale \
logging lzma macpath mailbox mailcap marshal math \
mimetypes mmap modulefinder msilib msvcrt \
multiprocessing netrc nis nntplib numbers operator \
os os ossaudiodev parser pathlib pdb pickle \
pickletools pipes pkgutil platform plistlib poplib posix \
pprint pty pwd py_compile pyclbr queue quopri \
random re readline reprlib resource rlcompleter runpy \
sched select selectors shelve shlex shutil signal site \
smtpd smtplib sndhdr socket socketserver spwd \
sqlite3 ssl stat statistics string stringprep struct \
subprocess sunau symbol symtable sys sysconfig \
syslog tabnanny tarfile telnetlib tempfile termios \
textwrap threading time timeit tkinter token \
tokenize trace traceback tracemalloc tty turtle \
types unicodedata unittest urllib uu uuid venv warnings \
wave weakref webbrowser winreg winsound wsgiref \
xdrlib xml xmlrpc zipfile zipimport zlib
style.python.11.1=fore:#DD9900

substylewords.11.2.$(file.patterns.py)=__future__ \
with_statement unicode_literals print_function
style.python.11.2=fore:#EE00AA,italics

statement.indent.$(file.patterns.py)=5 class def elif else except finally \
for if try while with

statement.lookback.$(file.patterns.py)=0
block.start.$(file.patterns.py)=
block.end.$(file.patterns.py)=

view.indentation.examine.*.py=2

tab.timmy.whinge.level=1


comment.block.python=#~

indent.python.colon=1

style.python.0=fore:#808080
style.python.1=fore:#007F00,$(font.comment)
style.python.2=fore:#007F7F
style.python.3=fore:#7F007F,$(font.monospace)
style.python.4=fore:#7F007F,$(font.monospace)
style.python.5=fore:#00007F,bold
style.python.6=fore:#7F0000
style.python.7=fore:#7F0000
style.python.8=fore:#0000FF,bold
style.python.9=fore:#007F7F,bold
style.python.10=bold
style.python.11=
style.python.12=fore:#7F7F7F
style.python.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.python.14=fore:#407090
style.python.15=fore:#805000
style.python.16=fore:#7F007F,$(font.monospace)
style.python.17=fore:#7F007F,$(font.monospace)
style.python.18=fore:#7F0000
style.python.19=fore:#7F0000
style.python.34=fore:#0000FF,bold
style.python.35=fore:#FF0000,bold
braces.python.style=10

if PLAT_WIN
	command.go.*.py=pythonw -u "$(FileNameExt)"
	command.go.subsystem.*.py=1
	command.go.*.pyw=pythonw -u "$(FileNameExt)"
	command.go.subsystem.*.pyw=1
	command.build.SConscript=scons.bat --up .
	command.build.SConstruct=scons.bat .

if PLAT_GTK
	command.go.*.py=python -u "$(FileNameExt)"
	command.build.SConscript=scons --up .
	command.build.SConstruct=scons .

if PLAT_MAC
	command.go.*.py=python -u "$(FileNameExt)"
	command.build.SConscript=scons --up .
	command.build.SConstruct=scons .

command.name.1.$(file.patterns.py)=Syntax Check
command.1.$(file.patterns.py)=python -c "import py_compile; py_compile.compile(r'$(FilePath)')"

module r

file.patterns.r=*.R;*.rsource;*.S;
file.patterns.r.like=$(file.patterns.r)

filter.r=R and S+ (R S rsouce)|$(file.patterns.r)|

*filter.r=$(filter.r)

lexer.$(file.patterns.r)=r

*language.r=R|R||

keywordclass.r=if else repeat while function for in next break TRUE FALSE NULL NA Inf NaN

keywords.$(file.patterns.r)=$(keywordclass.r)

keywords2.$(file.patterns.r)=abbreviate abline abs acf acos acosh addmargins aggregate agrep alarm alias alist all anova any aov aperm append apply approx approxfun apropos ar args arima array arrows asin asinh assign assocplot atan atanh attach attr attributes autoload autoloader ave axis backsolve barplot basename beta bindtextdomain binomial biplot bitmap bmp body box boxplot bquote break browser builtins bxp by bzfile c call cancor capabilities casefold cat category cbind ccf ceiling character charmatch chartr chol choose chull citation class close cm cmdscale codes coef coefficients col colnames colors colorspaces colours comment complex confint conflicts contour contrasts contributors convolve cophenetic coplot cor cos cosh cov covratio cpgram crossprod cummax cummin cumprod cumsum curve cut cutree cycle data dataentry date dbeta dbinom dcauchy dchisq de debug debugger decompose delay deltat demo dendrapply density deparse deriv det detach determinant deviance dexp df dfbeta dfbetas dffits dgamma dgeom dget dhyper diag diff diffinv difftime digamma dim dimnames dir dirname dist dlnorm dlogis dmultinom dnbinom dnorm dotchart double dpois dput drop dsignrank dt dump dunif duplicated dweibull dwilcox eapply ecdf edit effects eigen emacs embed end environment eval evalq example exists exp expression factanal factor factorial family fft fifo file filter find fitted fivenum fix floor flush for force formals format formula forwardsolve fourfoldplot frame frequency ftable function gamma gaussian gc gcinfo gctorture get getenv geterrmessage gettext gettextf getwd gl glm globalenv gray grep grey grid gsub gzcon gzfile hat hatvalues hcl hclust head heatmap help hist history hsv httpclient iconv iconvlist identical identify if ifelse image influence inherits integer integrate interaction interactive intersect invisible isoreg jitter jpeg julian kappa kernapply kernel kmeans knots kronecker ksmooth labels lag lapply layout lbeta lchoose lcm legend length letters levels lfactorial lgamma library licence license line lines list lm load loadhistory loadings local locator loess log logb logical loglin lowess ls lsfit machine mad mahalanobis makepredictcall manova mapply match matlines matplot matpoints matrix max mean median medpolish menu merge message methods mget min missing mode monthplot months mosaicplot mtext mvfft names napredict naprint naresid nargs nchar ncol next nextn ngettext nlevels nlm nls noquote nrow numeric objects offset open optim optimise optimize options order ordered outer pacf page pairlist pairs palette par parse paste pbeta pbinom pbirthday pcauchy pchisq pdf pentagamma person persp pexp pf pgamma pgeom phyper pi pico pictex pie piechart pipe plclust plnorm plogis plot pmatch pmax pmin pnbinom png pnorm points poisson poly polygon polym polyroot postscript power ppoints ppois ppr prcomp predict preplot pretty princomp print prmatrix prod profile profiler proj promax prompt provide psigamma psignrank pt ptukey punif pweibull pwilcox q qbeta qbinom qbirthday qcauchy qchisq qexp qf qgamma qgeom qhyper qlnorm qlogis qnbinom qnorm qpois qqline qqnorm qqplot qr qsignrank qt qtukey quantile quarters quasi quasibinomial quasipoisson quit qunif quote qweibull qwilcox rainbow range rank raw rbeta rbind rbinom rcauchy rchisq readline real recover rect reformulate regexpr relevel remove reorder rep repeat replace replicate replications require reshape resid residuals restart return rev rexp rf rgamma rgb rgeom rhyper rle rlnorm rlogis rm rmultinom rnbinom rnorm round row rownames rowsum rpois rsignrank rstandard rstudent rt rug runif runmed rweibull rwilcox sample sapply save savehistory scale scan screen screeplot sd search searchpaths seek segments seq sequence serialize setdiff setequal setwd shell sign signif sin single sinh sink smooth solve sort source spectrum spline splinefun split sprintf sqrt stack stars start stderr stdin stdout stem step stepfun stl stop stopifnot str strftime strheight stripchart strptime strsplit strtrim structure strwidth strwrap sub subset substitute substr substring sum summary sunflowerplot supsmu svd sweep switch symbols symnum system t table tabulate tail tan tanh tapply tempdir tempfile termplot terms tetragamma text time title toeplitz tolower topenv toupper trace traceback transform trigamma trunc truncate try ts tsdiag tsp typeof unclass undebug union unique uniroot unix unlink unlist unname unserialize unsplit unstack untrace unz update upgrade url var varimax vcov vector version vi vignette warning warnings weekdays weights which while window windows with write wsbrowser xedit xemacs xfig xinch xor xtabs xyinch yinch zapsmall

keywords3.$(file.patterns.r)=acme aids aircondit amis aml banking barchart barley beaver bigcity boot brambles breslow bs bwplot calcium cane capability cav censboot channing city claridge cloth cloud coal condense contourplot control corr darwin densityplot dogs dotplot ducks empinf envelope environmental ethanol fir frets gpar grav gravity grob hirose histogram islay knn larrows levelplot llines logit lpoints lsegments lset ltext lvqinit lvqtest manaus melanoma melanoma motor multiedit neuro nitrofen nodal ns nuclear oneway parallel paulsen poisons polar qq qqmath remission rfs saddle salinity shingle simplex singer somgrid splom stripplot survival tau tmd tsboot tuna unit urine viewport wireframe wool xyplot


word.chars.r=$(chars.alpha)$(chars.numeric)_.#
word.characters.$(file.patterns.r)=$(word.chars.r)
comment.block.r=#~

statement.indent.$(file.patterns.r.like)=5 for if
statement.end.$(file.patterns.r.like)=10 ;
statement.lookback.$(file.patterns.r.like)=20
block.start.$(file.patterns.r.like)=10 {
block.end.$(file.patterns.r.like)=10 }


style.r.32=$(font.base)
style.r.0=fore:#808080
style.r.1=$(colour.code.comment.box),$(font.code.comment.box)
style.r.2=$(colour.keyword),bold
style.r.3=fore:#7f0000,bold
style.r.4=fore:#7f007F,bold
style.r.5=$(colour.number)
style.r.6=$(colour.string)
style.r.7=$(colour.string)
style.r.8=$(colour.operator),bold
style.r.9=$(colour.identifier)
style.r.10=$(colour.operator),bold
style.r.11=$(colour.operator),$(font.monospace),back:#E0C0E0,eolfilled

braces.r.style=8


module others

file.patterns.props=*.properties;*.session;*.ini;*.inf;*.url;*.cfg;*.cnf;*.aut
file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo
file.patterns.batch=*.bat;*.cmd;*.nt
file.patterns.diff=*.diff;*.patch
file.patterns.make=makefile;Makefile;*.mak;configure
file.patterns.indent=*.indent

*source.patterns.props=$(file.patterns.props);
*source.patterns.batch=$(file.patterns.batch);
*source.patterns.diff=$(file.patterns.diff);
*source.patterns.make=$(file.patterns.make);*.iface;

filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text);make*|
filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|
filter.diff=Difference (diff patch)|$(file.patterns.diff)|

*filter.properties=$(filter.properties)
*filter.text=$(filter.text)

lexer.$(file.patterns.props)=props
lexer.$(file.patterns.batch)=batch
lexer.*.err=errorlist
lexer.$(file.patterns.make)=makefile
lexer.*.iface=makefile
lexer.$(file.patterns.diff)=diff
lexer.$(file.patterns.indent)=indent

*language.batch=&Batch|bat||
*language.difference=&Difference|diff||
*language.errorlist=&Errorlist|err||
*language.properties=&Properties|properties||
*language.makefile=&Makefile|mak|$(keyMake)|
*language._text=Text|txt|$(keyText)|
*language.indent=Indent|indent|$(keyIndent)|

word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'

colour.other.operator=fore:#B06000


style.props.0=
style.props.1=fore:#007F7F,$(font.comment)
style.props.2=$(colour.string),back:#E0F0F0,eolfilled
style.props.3=$(colour.other.operator)
style.props.4=$(colour.preproc)
style.props.5=
style.props.34=fore:#0000FF,notbold
style.props.35=fore:#FF0000,notbold
comment.block.props=#~
preprocessor.symbol.$(file.patterns.make)=!
preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF
preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF
preprocessor.end.$(file.patterns.make)=ENDIF


keywordclass.batch=\
assoc aux break call cd chcp chdir choice cls cmdextversion \
color com1 com2 com3 com4 con copy ctty date defined \
del dir do dpath echo else endlocal erase errorlevel exist \
exit for ftype goto if in lpt1 lpt2 lpt3 lpt4 md mkdir move \
not nul path pause popd prompt prn pushd rd rem ren \
rename rmdir set setlocal shift start time title type ver \
verify vol
keywords.$(file.patterns.batch)=$(keywordclass.batch)


style.batch.0=fore:#000000
style.batch.1=fore:#007F00,$(font.comment)
style.batch.2=$(colour.keyword),bold
style.batch.3=$(colour.string),back:#606060,fore:#FFFF00,eolfilled
style.batch.4=$(colour.preproc)
style.batch.5=fore:#007090,$(font.monospace),bold
style.batch.6=fore:#800080
style.batch.7=fore:#000000

comment.block.batch=REM ~


style.makefile.0=fore:#000000
style.makefile.1=$(colour.other.comment),$(font.code.comment.box)
style.makefile.2=$(colour.preproc)
style.makefile.3=fore:#000080
style.makefile.4=$(colour.other.operator)
style.makefile.5=fore:#A00000
style.makefile.9=$(colour.error),eolfilled
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

comment.block.makefile=#~


style.errorlist.32=fore:#B06000,$(font.small)
style.errorlist.0=fore:#000000
style.errorlist.1=fore:#FF0000
style.errorlist.2=fore:#800080
style.errorlist.3=fore:#808000
style.errorlist.4=fore:#0000FF
style.errorlist.5=fore:#B06000
style.errorlist.6=fore:#FF0000
style.errorlist.7=fore:#FF0000
style.errorlist.8=fore:#FF0000
style.errorlist.9=fore:#FF00FF
style.errorlist.10=fore:#007F00
style.errorlist.11=fore:#00007F
style.errorlist.12=fore:#007F7F
style.errorlist.13=fore:#7F0000
style.errorlist.14=fore:#FF0000
style.errorlist.15=fore:#FF0000
style.errorlist.16=fore:#FF0000
style.errorlist.17=fore:#FF0000
style.errorlist.18=fore:#FF0000
style.errorlist.19=fore:#FF0000
style.errorlist.20=fore:#FF0000
style.errorlist.21=fore:#000000
style.errorlist.22=fore:#800080
style.errorlist.23=fore:#000000,notvisible,back:#FFFFFF,$(error.background)
style.errorlist.24=back:#FFE0A0
style.errorlist.33=$(font.small)
style.errorlist.40=fore:#000000,$(error.background)
style.errorlist.41=fore:#800000,$(error.background)
style.errorlist.42=fore:#008000,$(error.background)
style.errorlist.43=fore:#808000,$(error.background)
style.errorlist.44=fore:#000080,$(error.background)
style.errorlist.45=fore:#800080,$(error.background)
style.errorlist.46=fore:#008080,$(error.background)
style.errorlist.47=fore:#A0A0A0,$(error.background)
style.errorlist.48=fore:#000000,bold,$(error.background)
style.errorlist.49=fore:#800000,bold,$(error.background)
style.errorlist.50=fore:#008000,bold,$(error.background)
style.errorlist.51=fore:#808000,bold,$(error.background)
style.errorlist.52=fore:#000080,bold,$(error.background)
style.errorlist.53=fore:#800080,bold,$(error.background)
style.errorlist.54=fore:#008080,bold,$(error.background)
style.errorlist.55=fore:#A0A0A0,bold,$(error.background)

error.background=back:#FFF7E7,eolfilled

lexer.errorlist.value.separate=1


style.diff.0=fore:#000000
style.diff.1=fore:#007F00
style.diff.2=fore:#7F7F00
style.diff.3=fore:#7F0000
style.diff.4=fore:#7F007F
style.diff.5=fore:#007F7F
style.diff.6=fore:#00007F
style.diff.7=fore:#7F7F7F

command.build.makefile=make
command.build.*.mak=make

command.help.*.properties="file://$(SciteDefaultHome)/SciTEDoc.html#property-$(CurrentSelection)"
command.help.subsystem.*.properties=2

if PLAT_WIN
	command.go.*.bat="$(FileNameExt)"
	command.name.0.*.bat=Execute Selection
	command.0.*.bat=$(CurrentSelection)
	command.name.1.*.mak=nmake
	command.1.*.mak=nmake -f $(FileNameExt)